/*SEÇÃO 9 -> JUNTANDO AS PEÇAS*/

/*SELEÇÃO, PROJEÇÃO E JUNÇÃO: 
	- MUITO IMPORTANTES PARA TODO O RESTO DA CARREIRA.

# PROJEÇÃO -> TUDO QUE VC QUER VER NA TELA (QUERY)
	- SELECT * FROM TELEFONE;
	- SELECT NOW(); [PROJETANDO A DATA E HORA]
	- SELECT NOW() AS DATA ATUAL; [ALIAS]
	- SELECT 2 + 2 AS SOMA;
	- SELECT 2 + 2 AS SOMA, NOME, NOW() FROM CLIENTE;
	- SEMPRE DEVEMOS INICIAR PELA PROJEÇÃO. [SELECT NOME, SEXO, TIPO, TELEFONE, BAIRRO]



# SELEÇÃO -> TEORIA DE CONJUNTOS. (SUBCONJUNTOS = SELEÇÃO)
	- SELECT NOME, SEXO, EMAIL FROM CLIENTE WHERE SEXO = 'F'; (TEM QUE SABER A COLUNA QUE VAI SERVIR DE FILTRO);
	- SELECT NUMERO FROM TELEFONE WHERE TIPO = 'CEL'; 
	- A CLÁUSULA DE SELEÇÃO É O 'WHERE';
	- O WHERE NÃO DEVE SER USADO PARA JUNÇÃO!

	- SELECT -> PROJEÇÃO		WHERE -> SELEÇÃO		FROM -> ORIGEM

	- AQUI NO MYSQL É POSSÍVEL USAR O 'SELECT NOW()', QUE NÃO POSSUI ORIGEM, MAS NO ORACLE SEMPRE PRECISA DA ORIGEM.



# JUNÇÃO (JOIN) -> 

*/

SELECT NOME, EMAIL, IDCLIENTE
FROM CLIENTE;

SELECT ID_CLIENTE, BAIRRO, CIDADE FROM ENDERECO;


----------------+---------------------+-----------+
| NOME           | EMAIL               | IDCLIENTE |
+----------------+---------------------+-----------+
| JOAO PAULO     | JOAOPAULO@GMAIL.COM |         8 |
| PATRICIA SILVA | NULL                |         9 |
| EDSON ALMEIDA  | EDSONALMEIDA@IG.COM |        10 |
| ANA CLARA      | NULL                |        11 |
| ALINE MAFRA    | MAFRA@GMAIL.COM     |        12 |
+----------------+---------------------+-----------+

------------+------------+------------+
| ID_CLIENTE | BAIRRO     | CIDADE     |
+------------+------------+------------+
|          8 | BOQUEIRAO  | GUARAPUAVA |
|          9 | CONRADINHO | GUARAPUAVA |
|         10 | MORRO ALTO | GUARAPUAVA |
|         11 | CENTRO     | GUARAPUAVA |
|         12 | CENTRO     | GUARAPUAVA |
+------------+------------+------------+


/* JOIN: FORMA GAMBIARRA */
SELECT NOME, SEXO, BAIRRO. CIDADE /*PROJEÇÃO*/
FROM CLIENTE, ENDERECO            /*ORIGEM*/
WHERE IDCLIENTE = ID_CLIENTE;     /*SELEÇÃO*/

/*INTEGRIDADE REFERENCIAL ->*/

/*FORMA CORRETA USANDO 'JOIN'*/
SELECT NOME, SEXO, BAIRRO, CIDADE
FROM CLIENTE
INNER JOIN ENDERECO
ON IDCLIENTE = ID_CLIENTE;


SELECT NOME AS CLIENTE, SEXO, BAIRRO, CIDADE
FROM CLIENTE
INNER JOIN ENDERECO
ON IDCLIENTE = ID_CLIENTE;

+----------------+------+------------+------------+
| CLIENTE        | SEXO | BAIRRO     | CIDADE     |
+----------------+------+------------+------------+
| JOAO PAULO     | M    | BOQUEIRAO  | GUARAPUAVA |
| PATRICIA SILVA | F    | CONRADINHO | GUARAPUAVA |
| EDSON ALMEIDA  | M    | MORRO ALTO | GUARAPUAVA |
| ANA CLARA      | F    | CENTRO     | GUARAPUAVA |
| ALINE MAFRA    | F    | CENTRO     | GUARAPUAVA |
+----------------+------+------------+------------+



SELECT NOME AS CLIENTE, SEXO, BAIRRO, CIDADE  	/*PROJEÇÃO*/
FROM CLIENTE  									/*ORIGEM*/
	INNER JOIN ENDERECO								/*JUNÇÃO*/
	ON IDCLIENTE = ID_CLIENTE						/*JUNÇÃO*/
WHERE SEXO = 'M';								/*SELEÇÃO*/

+---------------+------+------------+------------+
| CLIENTE       | SEXO | BAIRRO     | CIDADE     |
+---------------+------+------------+------------+
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA |
| EDSON ALMEIDA | M    | MORRO ALTO | GUARAPUAVA |
+---------------+------+------------+------------+


SELECT NOME, SEXO, EMAIL, TIPO, NUMERO
FROM CLIENTE
INNER JOIN TELEFONE
ON IDCLIENTE = ID_CLIENTE;

+---------------+------+---------------------+------+----------+
| NOME          | SEXO | EMAIL               | TIPO | NUMERO   |
+---------------+------+---------------------+------+----------+
| JOAO PAULO    | M    | JOAOPAULO@GMAIL.COM | CEL  | 78458743 |
| JOAO PAULO    | M    | JOAOPAULO@GMAIL.COM | RES  | 78458453 |
| JOAO PAULO    | M    | JOAOPAULO@GMAIL.COM | COM  | 78458843 |
| EDSON ALMEIDA | M    | EDSONALMEIDA@IG.COM | CEL  | 78455643 |
| EDSON ALMEIDA | M    | EDSONALMEIDA@IG.COM | COM  | 78438743 |
| ANA CLARA     | F    | NULL                | RES  | 78418743 |
| ANA CLARA     | F    | NULL                | CEL  | 78428743 |
+---------------+------+---------------------+------+----------+


/*JUNÇÃO DE DUAS TABELAS: 

	- NOME, SEXO, BAIRRO, CIDADE, TIPO, NUMERO
*/


SELECT NOME, SEXO, BAIRRO, CIDADE, TIPO, NUMERO
FROM CLIENTE
    INNER JOIN ENDERECO
    ON IDCLIENTE = ID_CLIENTE
    INNER JOIN TELEFONE
    ON IDCLIENTE = ID_CLIENTE;
/*A CLÁUSULA ACIMA VAI GERAR UM ERRO DE AMBIGUIDADE*/



/*SOLUÇÃO*/
SELECT CLIENTE.NOME, CLIENTE.SEXO, ENDERECO.BAIRRO, ENDERECO.CIDADE, TELEFONE.TIPO, TELEFONE.NUMERO
FROM CLIENTE
    INNER JOIN ENDERECO
    ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
    INNER JOIN TELEFONE
    ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE;

+---------------+------+------------+------------+------+----------+
| NOME          | SEXO | BAIRRO     | CIDADE     | TIPO | NUMERO   |
+---------------+------+------------+------------+------+----------+
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | CEL  | 78458743 |
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | RES  | 78458453 |
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | COM  | 78458843 |
| EDSON ALMEIDA | M    | MORRO ALTO | GUARAPUAVA | CEL  | 78455643 |
| EDSON ALMEIDA | M    | MORRO ALTO | GUARAPUAVA | COM  | 78438743 |
| ANA CLARA     | F    | CENTRO     | GUARAPUAVA | RES  | 78418743 |
| ANA CLARA     | F    | CENTRO     | GUARAPUAVA | CEL  | 78428743 |
+---------------+------+------------+------------+------+----------+
/*SEMPRE VAI RELACIONA COM A CARDINALIDADE N -> REPETE O NOME E O ENDEREÇO POR CONTA DOS TELEFONES*/




/* PONTEIRAMENTO -> PERFORMANCE MELHOR
FORMA MAIS COMUMENTE UTILIZADA PARA AUMENTAR A PERFORMANCE*/
SELECT C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO, T.NUMERO
FROM CLIENTE C
    INNER JOIN ENDERECO E
    ON C.IDCLIENTE = E.ID_CLIENTE
    INNER JOIN TELEFONE T
    ON C.IDCLIENTE = T.ID_CLIENTE;

+---------------+------+------------+------------+------+----------+
| NOME          | SEXO | BAIRRO     | CIDADE     | TIPO | NUMERO   |
+---------------+------+------------+------------+------+----------+
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | CEL  | 78458743 |
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | RES  | 78458453 |
| JOAO PAULO    | M    | BOQUEIRAO  | GUARAPUAVA | COM  | 78458843 |
| EDSON ALMEIDA | M    | MORRO ALTO | GUARAPUAVA | CEL  | 78455643 |
| EDSON ALMEIDA | M    | MORRO ALTO | GUARAPUAVA | COM  | 78438743 |
| ANA CLARA     | F    | CENTRO     | GUARAPUAVA | RES  | 78418743 |
| ANA CLARA     | F    | CENTRO     | GUARAPUAVA | CEL  | 78428743 |
+---------------+------+------------+------------+------+----------+



/*
	- SQL -> 4TH GERAÇÃO DE LINGUAGEM (ALTÍSSIMO NÍVEL);
	CATEGORIAS:
		- DML -> DATA MANIPULATION LANGUAGE.
			- INSERT INTO CLIENTE VALUES();
			- INSERT INTO ENDERECO VALUES();
			- SELECT * FROM CLIENTE;
			- SELECT * FROM CLIENTE
			  WHERE SEXO = 'M';
		* UPDATE
			- SELECT * FROM CLIENTE
			  WHERE CLIENTE = 7;
			- NUNCA FAÇA UM UPDATE OU UM DELETE SEM TER CERTEZA QUEM SERÁ ATUALIZADO
			- UPDATE CLIENTE
			  SET SEXO = 'F'
			  WHERE IDCLIENTE = 7;
	    * DELETE
	    	- SELECT * FROM CLIENTE
			  WHERE CLIENTE = 7;
			- DELETE FROM CLIENTE
			  WHERE IDCLIENTE = 7;

		- DDL -> DATA DEFINITION LANGUAGE.
			- CREATE TABLE PRODUTO(
				IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
				NOME VARCHAR(30) NOT NULL,
				PRECO INT,
				FRETE FLOAT(10,2) NOT NULL
			);


			- ALTER TABLE:
				- NOME DA COLUNA -> CHANGE/ MODIFY
					- ALTER TABLE PRODUTO
					  CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

			- ALTER TABLE:
				- TIPO -> MODIFY
					- MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

			- ADICIONANDO COLUNAS:
				- ALTER TABLE PRODUTO
				  ADD PESO FLOAT(10, 2) NOT NULL;

			- APAGANDO UMA COLUNA:
				- ALTER TABLE PRODUTO
				  DROP COLUMN PESO;

			- ADICIONANDO UMA COLUNA NA ORDEM ESPECÍFICA:
				- ALTER TABLE PRODUTO
				  ADD COLUMN PESO FLOAT(10, 2) NOT NULL
				  AFTER NOME_PRODUTO;


			- ADICIONANDO UMA COLUNA NA ORDEM ESPECÍFICA:
				- ALTER TABLE PRODUTO
				  ADD COLUMN PESO FLOAT(10, 2) NOT NULL
				  FIRST NOME_PRODUTO;


		- DCL -> DATA CONTROL LANGUAGE.
		- TCL -> TRANSACTION CONTROL LANGUAGE.

*/



SELECT C.NOME, C.SEXO, T.NUMERO AS TELEFONE, E.CIDADE, E.ESTADO
FROM CLIENTE C
	INNER JOIN TELEFONE T
	ON C.IDCLIENTE = T.ID_CLIENTE
	INNER JOIN ENDERECO E
	ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'M'; 




SELECT * FROM CLIENTE
WHERE IDCLIENTE IN(12, 13, 18, 19);

UPDATE CLIENTE SET SEXO = 'F'
WHERE IDCLIENTE IN(12, 13, 18, 19);



/*AGREGAÇÃO*/
SELECT COUNT(*) AS QUANTIDADE, SEXO
FROM CLIENTE
GROUP BY SEXO;



/*ID E EMAIL MULHERES QUE MOREM NO CENTRO DO RIO DE JANEIRO E NÃO TENHAM CELULAR*/
SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO /*NOME E SEXO SÓ SERVEM PARA AJUDAR A IDENTIFICAR, DEPOIS TIRA DAÍ*/
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F';

SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO 
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO';


SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO';


SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND (TIPO = 'RES' TIPO = 'COM'); /*DEVEMOS ENCAPSULAR PARA DETERMINAR A PROCEDÊNCIA DE OPERAÇÃO E EVITAR ERROS*/



/*SUBQUERIES -> QUERY DENTRO DE QUERY - VAMOS ESTUDAR MAIS PRA FRENTE*/
SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, T.TIPO, E.BAIRRO, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'
AND BAIRRO = 'CENTRO' AND CIDADE = 'RIO DE JANEIRO'
AND (TIPO = 'RES' TIPO = 'COM');

